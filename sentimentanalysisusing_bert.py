# -*- coding: utf-8 -*-
"""SentimentAnalysisUsing BERT.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qqsi7ug4q6BTVyQkMiXevH0dBg5Lsl7l

1. Install and Import all Dependencies
Go to https://pytorch.org/ and select the requirements
"""

pip3 install torch==1.8.1+cu111 torchvision==0.9.1+cu111 torchaudio===0.8.1 -f https://download.pytorch.org/whl/torch_stable.html

pip install transformers requests beautifulsoup4 pandas numpy

"""Beautiful Soup is a library that makes it easy to scrape information from web pages. It sits atop an HTML or XML parser, providing Pythonic idioms for iterating, searching, and modifying the parse tree.
Please go to https://pypi.org/project/beautifulsoup4/
"""

from transformers import AutoTokenizer, AutoModelForSequenceClassification
import torch
import requests
from bs4 import BeautifulSoup
import re



"""2. Instantiate Model

bert-base-multilingual-uncased-sentiment pretained model has taken from Hugging face
"""

tokenizer = AutoTokenizer.from_pretrained('nlptown/bert-base-multilingual-uncased-sentiment')

model = AutoModelForSequenceClassification.from_pretrained('nlptown/bert-base-multilingual-uncased-sentiment')

"""3. Encode and Calculate Sentiment"""

tokens = tokenizer.encode('Worst product ever, try next time. Bad', return_tensors='pt')

tokens

tokens[0]

tokenizer.decode(tokens[0])

tokens = tokenizer.encode('It was good but couldve been better. Great', return_tensors='pt')

result = model(tokens)

result

result.logits

int(torch.argmax(result.logits))+1



"""4. Collect Reviews

Go to https://www.yelp.com/ to scrap all review
or 'https://www.yelp.com/biz/social-brew-cafe-pyrmont'
"""

r = requests.get('https://www.yelp.com/biz/mejico-sydney-2')
soup = BeautifulSoup(r.text, 'html.parser')
regex = re.compile('.*comment.*')
results = soup.find_all('p', {'class':regex})
reviews = [result.text for result in results]

r

r.text

soup.find_all

results

results[0].text

reviews

reviews[0]



"""5. Load Reviews into DataFrame and Score"""

import numpy as np
import pandas as pd

df = pd.DataFrame(np.array(reviews), columns=['review'])

df.head()

df['review'].iloc[0]

def sentiment_score(review):
    tokens = tokenizer.encode(review, return_tensors='pt')
    result = model(tokens)
    return int(torch.argmax(result.logits))+1

sentiment_score

sentiment_score(df['review'].iloc[1])

df['sentiment'] = df['review'].apply(lambda x: sentiment_score(x[:512]))

df

df['review'].iloc[3]

df.to_csv('review.csv')

df.to_csv(r'C:\Users\hirak\Downloads\review.csv')

